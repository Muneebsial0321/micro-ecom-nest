version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - kibana_data:/usr/share/kibana/data

  product_db:
    image: postgres:latest
    container_name: product_db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=product_db
    ports:
      - "5434:5432"
    volumes:
      - product_db_data:/var/lib/postgresql/data

    healthcheck:
      # ðŸ”¥ Add this to ensure Postgres is ready before PgBouncer starts
      test: [ "CMD-SHELL", "pg_isready -U admin -d product_db" ]
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - db-network

  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    environment:
      DB_HOST: product_db
      DATABASES_PORT: 5432
      DATABASES_USER: admin
      DATABASES_PASSWORD: 123
      DATABASES_NAME: mydb
      AUTH_TYPE: md5
      AUTH_USER: myuser
      LISTEN_PORT: 6432
    ports:
      - "6432:6432"
    depends_on:
      - postgres
    networks:
      - db_network

volumes:
  elasticsearch_data:
    name: prod-elastic-data
  kibana_data:
    name: prod-kibana-data
  product_db_data:
    name: prod-db
networks:
  db-network:
    driver: bridge
