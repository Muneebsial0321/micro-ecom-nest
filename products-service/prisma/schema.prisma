// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  
}

model Product {
  id             String      @id @default(uuid())
  name           String
  desc           String
  size           String[]
  colours        String[]
  tags           String[]
  picUrl         String[]
  price          Float
  isAvailable    Boolean     @default(true)
  viewCount      Int @default(0)
  ReviewCount    Int @default(0)
  purchasedCount Int @default(0)
  view           View[]
  review         Review[]
  purchased      Purchased[]
  createdAt      DateTime    @default(now())
}

model Review {
  id        String   @id @default(uuid())
  productId String
  userId    String
  message   String
  createdAt DateTime @default(now())
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
}

model View {
  id        Int      @id @default(autoincrement())
  userId    String
  productId String
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
}

model Purchased {
  id        Int      @id @default(autoincrement())
  userId    String
  productId String
  Product   Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}
